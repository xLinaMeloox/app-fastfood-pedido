name: pipeline
on:
  push:
    branches:
      - master

jobs:
  teste-unitario:
    runs-on: ubuntu-latest

    steps:
    - name: Checagem do codigo
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Configuracao java
      uses: actions/setup-java@v3
      with:
        distribution: 'corretto'
        java-version: '17'
        
    - name: Entra na pasta App
      run: |
        cd app
        rm -rf target
        mvn clean install 
   # - name: Exectar testes unitarios
  #    run: |
   #    cd app
   #    mvn test

    

  code-analysis:
    runs-on: ubuntu-latest
  # needs: teste-unitario

    steps:
    - name: Checagem do codigo
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Set up Java
      uses: actions/setup-java@v3
      with:
        distribution: 'corretto'
        java-version: '17'

    - name: Cache SonarCloud packages
      uses: actions/cache@v1
      with:
        path: ~/.sonar/cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar

    - name: Cache Maven packages
      uses: actions/cache@v1
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('app/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    - name: Navigate to the app directory
      run: |
        cd app
        mvn clean install -U

    - name: Build and analyze
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: |
        cd app
        mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=caikeburgos_app-fastfood-lina -Dsonar.login=$SONAR_TOKEN

    - name: Check Quality Gate
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: |
        curl -s "https://sonarcloud.io/project/configuration?id=caikeburgos_app-fastfood-lina" -H "Authorization: Basic $SONAR_TOKEN"
         
  build:
   # needs: [teste-unitario] 
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Java
      uses: actions/setup-java@v3
      with:
        distribution: 'corretto'
        java-version: '17'

    - name: Build
      run: |
        cd app
        mvn clean install 
        cd target
        mkdir app
        ls -la
        chmod 777 app
        mv *.jar app
        cd app
        mv *.jar app-fastfood.jar
        ls -la 

     
 
          
    - name: Upload jar 
      uses: actions/upload-artifact@v2
      with:
        name: app
        path: '${{ github.workspace }}/app/target/app/app-fastfood.jar' 
        
     
        
      #working-directory: app
      
  publish:
  
    runs-on: ubuntu-latest
    needs: 
     - build
     - code-analysis
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Download jar 
      uses: actions/download-artifact@v2
      with:
        name: app
        path: '${{ github.workspace }}/app' 
        
    - name: Build2
      run: |
        cd app
        ls -la      
        
      
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Build and push
      uses: docker/build-push-action@v5
      with:
       context: .
       file: ${{ github.workspace }}/Dockerfile
       push: true
       tags: ${{ secrets.DOCKERHUB_USERNAME }}/appshakirafastfood:latest
